@page "/{ViewRoute}/create"
@using Appointment.Globals.Enums

@inherits DynamicBaseView

<PageTitle>Crear @Module.SingularName</PageTitle>

@if(ViewIsReady && RouteIsValid && Entity is not null)
{
    <h3>Crear @Module.SingularName</h3>

    <RadzenStack Orientation="@Orientation.Horizontal" JustifyContent="@JustifyContent.End">
        <RadzenButton Disabled="@IsBusy" Click="NavigateToList" Variant="Variant.Flat" Text="Cancelar" ButtonStyle="ButtonStyle.Warning" />
        <RadzenButton form="@FormId" ButtonType="ButtonType.Submit" Variant="Variant.Flat" Text="Guardar" ButtonStyle="ButtonStyle.Primary" IsBusy=@IsBusy />
    </RadzenStack>

    <EditForm id="@FormId" 
        OnValidSubmit="@HandleValidSubmit"
        OnInvalidSubmit="@HandleInvalidSubmit" 
        EditContext="@EditFormContext">

        <CascadingValue Value="@this">
            @Module.GetForm(ViewType)
        </CascadingValue>

    </EditForm>

}else if(ViewIsReady && !RouteIsValid)
{
    <p>Ruta inv√°lida</p>
}
else
{
    <p>Cargando...</p>
}

@code
{
    public override ViewType ViewType {get; set;} = ViewType.Create;
    protected override void OnInitialized()
    {
        InitView();

        base.OnInitialized();
    }

    private void InitView()
    {
        ViewIsReady = true;
        LastViewRoute = ViewRoute;
        RouteIsValid = ApiService.EndPointIsSaved(ViewRoute);

        if(RouteIsValid)
        {
            SearchModule();
        }else
            return;

        SetEditForm();
        SetEntity();
    }

    protected override void OnParametersSet()
    {
        if(ViewRoute != LastViewRoute)
        {
            InitView();
            StateHasChanged();
        }

        base.OnParametersSet();
    }
}