@page "/{ViewRoute}/detail/{Rowid}"
@using Appointment.Globals.Enums

@inherits DynamicBaseView

@if(ViewIsReady && RouteIsValid && Entity is not null)
{
    <PageTitle>Ver @Module.SingularName</PageTitle>

    <h3>@Module.SingularName</h3>

    <RadzenStack Orientation="@Orientation.Horizontal" JustifyContent="@JustifyContent.End">
        <RadzenButton Click="NavigateToList" Variant="Variant.Flat" Text="Ir a la lista" ButtonStyle="ButtonStyle.Primary" />
    </RadzenStack>

    <EditForm id="@FormId" 
        OnValidSubmit="@HandleValidSubmit"
        OnInvalidSubmit="@HandleInvalidSubmit" 
        EditContext="@EditFormContext">

        <CascadingValue Value="@this">
            @Module.GetForm(ViewType)
        </CascadingValue>

    </EditForm>
}else if(ViewIsReady && !RouteIsValid)
{
    <p>Ruta inv√°lida</p>
}
else
{
    <p>Cargando...</p>
}

@code
{
    public override ViewType ViewType {get; set;} = ViewType.Detail;
    protected override void OnInitialized()
    {
        _ = InitView();

        base.OnInitialized();
    }

    private async Task InitView()
    {
        LastViewRoute = ViewRoute;
        RouteIsValid = ApiService.EndPointIsSaved(ViewRoute);

        if(RouteIsValid)
        {
            SearchModule();
        }else
        {
            ViewIsReady = true;
            return;
        }

        SetEditForm();
        SetEntity();

        var ForeignKeys = Entity.GetType()
            .GetProperties()
            .Where(x => x.PropertyType.Namespace?.EndsWith(".Entities") ?? false)
            .Select(x => x.PropertyType.Name)
            .ToArray();

        await Module.GetItem(Rowid, ForeignKeys);

        SetEntity();

        ViewIsReady = true;

        StateHasChanged();
    }

    protected override void OnParametersSet()
    {
        if(ViewRoute != LastViewRoute)
        {
            _ = InitView();
            StateHasChanged();
        }

        base.OnParametersSet();
    }
}